// <auto-generated />
using System;
using Library.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Library.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20220307061539_changeTableAndColumnName")]
    partial class changeTableAndColumnName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Library.Models.Tbl_Author", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Isim");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Soyisim");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Yazarlar");
                });

            modelBuilder.Entity("Library.Models.Tbl_Book", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageCount")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Tbl_AuthorID")
                        .HasColumnType("int");

                    b.Property<int>("Tbl_BookTypeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Tbl_AuthorID");

                    b.HasIndex("Tbl_BookTypeID");

                    b.ToTable("Tbl_Books");
                });

            modelBuilder.Entity("Library.Models.Tbl_BookType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Tbl_BookTypes");
                });

            modelBuilder.Entity("Library.Models.Tbl_Operation", b =>
                {
                    b.Property<int>("Tbl_StudentID")
                        .HasColumnType("int");

                    b.Property<int>("Tbl_BookID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Tbl_StudentID", "Tbl_BookID");

                    b.HasIndex("Tbl_BookID");

                    b.ToTable("Operasyon");
                });

            modelBuilder.Entity("Library.Models.Tbl_Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchollNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Tbl_Students");
                });

            modelBuilder.Entity("Library.Models.Tbl_Book", b =>
                {
                    b.HasOne("Library.Models.Tbl_Author", "Tbl_Author")
                        .WithMany("Tbl_Books")
                        .HasForeignKey("Tbl_AuthorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Models.Tbl_BookType", "Tbl_BookType")
                        .WithMany("Tbl_Books")
                        .HasForeignKey("Tbl_BookTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tbl_Author");

                    b.Navigation("Tbl_BookType");
                });

            modelBuilder.Entity("Library.Models.Tbl_Operation", b =>
                {
                    b.HasOne("Library.Models.Tbl_Book", "Tbl_Book")
                        .WithMany("Tbl_Operations")
                        .HasForeignKey("Tbl_BookID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Models.Tbl_Student", "Tbl_Student")
                        .WithMany("Tbl_Operations")
                        .HasForeignKey("Tbl_StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tbl_Book");

                    b.Navigation("Tbl_Student");
                });

            modelBuilder.Entity("Library.Models.Tbl_Author", b =>
                {
                    b.Navigation("Tbl_Books");
                });

            modelBuilder.Entity("Library.Models.Tbl_Book", b =>
                {
                    b.Navigation("Tbl_Operations");
                });

            modelBuilder.Entity("Library.Models.Tbl_BookType", b =>
                {
                    b.Navigation("Tbl_Books");
                });

            modelBuilder.Entity("Library.Models.Tbl_Student", b =>
                {
                    b.Navigation("Tbl_Operations");
                });
#pragma warning restore 612, 618
        }
    }
}
